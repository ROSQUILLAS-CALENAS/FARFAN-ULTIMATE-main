{"ok": false, "sequence": ["canonical_flow/A_analysis_nlp/__init__.py", "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "canonical_flow/A_analysis_nlp/evidence_processor.py", "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "canonical_flow/A_analysis_nlp/question_analyzer.py", "canonical_flow/G_aggregation_reporting/__init__.py", "canonical_flow/G_aggregation_reporting/audit_logger.py", "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "canonical_flow/G_aggregation_reporting/report_compiler.py", "canonical_flow/I_ingestion_preparation/__init__.py", "canonical_flow/I_ingestion_preparation/advanced_loader.py", "canonical_flow/I_ingestion_preparation/feature_extractor.py", "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "canonical_flow/I_ingestion_preparation/normative_validator.py", "canonical_flow/I_ingestion_preparation/pdf_reader.py", "canonical_flow/I_ingestion_preparation/preflight_validation.py", "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "canonical_flow/K_knowledge_extraction/__init__.py", "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "canonical_flow/K_knowledge_extraction/causal_graph.py", "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "canonical_flow/K_knowledge_extraction/chunking_processor.py", "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "canonical_flow/K_knowledge_extraction/embedding_builder.py", "canonical_flow/K_knowledge_extraction/embedding_generator.py", "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "canonical_flow/K_knowledge_extraction/gate_validator.py", "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "canonical_flow/L_classification_evaluation/__init__.py", "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "canonical_flow/L_classification_evaluation/conformal_prediction.py", "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/evidence_adapter.py", "canonical_flow/L_classification_evaluation/question_registry.py", "canonical_flow/L_classification_evaluation/schemas.py", "canonical_flow/L_classification_evaluation/score_calculator.py", "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_composition_trace.py", "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "canonical_flow/L_classification_evaluation/test_schemas.py", "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "canonical_flow/O_orchestration_control/__init__.py", "canonical_flow/O_orchestration_control/adaptive_controller.py", "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "canonical_flow/O_orchestration_control/alert_system.py", "canonical_flow/O_orchestration_control/backpressure_manager.py", "canonical_flow/O_orchestration_control/circuit_breaker.py", "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "canonical_flow/O_orchestration_control/constraint_validator.py", "canonical_flow/O_orchestration_control/contract_validator.py", "canonical_flow/O_orchestration_control/core_orchestrator.py", "canonical_flow/O_orchestration_control/decision_engine.py", "canonical_flow/O_orchestration_control/deterministic_router.py", "canonical_flow/O_orchestration_control/distributed_processor.py", "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "canonical_flow/O_orchestration_control/evidence_router.py", "canonical_flow/O_orchestration_control/exception_monitoring.py", "canonical_flow/O_orchestration_control/exception_telemetry.py", "canonical_flow/O_orchestration_control/rubric_validator.py", "canonical_flow/R_search_retrieval/__init__.py", "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "canonical_flow/R_search_retrieval/hybrid_retriever.py", "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "canonical_flow/R_search_retrieval/lexical_index.py", "canonical_flow/R_search_retrieval/lexical_index_base.py", "canonical_flow/R_search_retrieval/reranker.py", "canonical_flow/R_search_retrieval/vector_index.py", "canonical_flow/S_synthesis_output/__init__.py", "canonical_flow/S_synthesis_output/answer_formatter.py", "canonical_flow/S_synthesis_output/answer_synthesizer.py", "canonical_flow/T_integration_storage/__init__.py", "canonical_flow/T_integration_storage/analytics_enhancement.py", "canonical_flow/T_integration_storage/compensation_engine.py", "canonical_flow/T_integration_storage/feedback_loop.py", "canonical_flow/T_integration_storage/metrics_collector.py", "canonical_flow/T_integration_storage/optimization_engine.py", "canonical_flow/X_context_construction/__init__.py", "canonical_flow/X_context_construction/context_adapter.py", "canonical_flow/X_context_construction/immutable_context.py", "canonical_flow/X_context_construction/lineage_tracker.py", "canonical_flow/__init__.py", "canonical_flow/analysis/__init__.py", "canonical_flow/analysis/artifact_generator.py", "canonical_flow/analysis/audit_logger.py", "canonical_flow/analysis/audit_validation.py", "canonical_flow/analysis/dimension_aggregator.py", "canonical_flow/analysis/dnp_causal_correction_system.py", "canonical_flow/analysis/integration_demo.py", "canonical_flow/analysis/macro_alignment.py", "canonical_flow/analysis/per_point_scoring_system.py", "canonical_flow/analysis/test_artifact_generator.py", "canonical_flow/analysis/test_unit_artifact_generator.py", "canonical_flow/calibration/__init__.py", "canonical_flow/calibration/calibration_artifacts.py", "canonical_flow/calibration/calibration_dashboard.py", "canonical_flow/calibration_dashboard.py", "canonical_flow/evaluation/__init__.py", "canonical_flow/evaluation/audit_logger.py", "canonical_flow/ingestion/__init__.py", "canonical_flow/knowledge/__init__.py", "canonical_flow/knowledge/knowledge_audit_demo.py", "canonical_flow/knowledge/knowledge_audit_system.py", "canonical_flow/knowledge/preflight_validator.py", "canonical_flow/mathematical_enhancers/__init__.py", "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "canonical_flow/mathematical_enhancers/context_enhancer.py", "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "canonical_flow/mathematical_enhancers/integration_enhancer.py", "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "canonical_flow/pipeline_state_manager.py"], "roots": ["canonical_flow/A_analysis_nlp/__init__.py", "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "canonical_flow/A_analysis_nlp/evidence_processor.py", "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "canonical_flow/A_analysis_nlp/question_analyzer.py", "canonical_flow/G_aggregation_reporting/__init__.py", "canonical_flow/G_aggregation_reporting/audit_logger.py", "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "canonical_flow/G_aggregation_reporting/report_compiler.py", "canonical_flow/I_ingestion_preparation/__init__.py", "canonical_flow/I_ingestion_preparation/advanced_loader.py", "canonical_flow/I_ingestion_preparation/feature_extractor.py", "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "canonical_flow/I_ingestion_preparation/normative_validator.py", "canonical_flow/I_ingestion_preparation/pdf_reader.py", "canonical_flow/I_ingestion_preparation/preflight_validation.py", "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "canonical_flow/K_knowledge_extraction/__init__.py", "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "canonical_flow/K_knowledge_extraction/causal_graph.py", "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "canonical_flow/K_knowledge_extraction/chunking_processor.py", "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "canonical_flow/K_knowledge_extraction/embedding_builder.py", "canonical_flow/K_knowledge_extraction/embedding_generator.py", "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "canonical_flow/K_knowledge_extraction/gate_validator.py", "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "canonical_flow/L_classification_evaluation/__init__.py", "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "canonical_flow/L_classification_evaluation/conformal_prediction.py", "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/evidence_adapter.py", "canonical_flow/L_classification_evaluation/question_registry.py", "canonical_flow/L_classification_evaluation/schemas.py", "canonical_flow/L_classification_evaluation/score_calculator.py", "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_composition_trace.py", "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "canonical_flow/L_classification_evaluation/test_schemas.py", "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "canonical_flow/O_orchestration_control/__init__.py", "canonical_flow/O_orchestration_control/adaptive_controller.py", "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "canonical_flow/O_orchestration_control/alert_system.py", "canonical_flow/O_orchestration_control/backpressure_manager.py", "canonical_flow/O_orchestration_control/circuit_breaker.py", "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "canonical_flow/O_orchestration_control/constraint_validator.py", "canonical_flow/O_orchestration_control/contract_validator.py", "canonical_flow/O_orchestration_control/core_orchestrator.py", "canonical_flow/O_orchestration_control/decision_engine.py", "canonical_flow/O_orchestration_control/deterministic_router.py", "canonical_flow/O_orchestration_control/distributed_processor.py", "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "canonical_flow/O_orchestration_control/evidence_router.py", "canonical_flow/O_orchestration_control/exception_monitoring.py", "canonical_flow/O_orchestration_control/exception_telemetry.py", "canonical_flow/O_orchestration_control/rubric_validator.py", "canonical_flow/R_search_retrieval/__init__.py", "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "canonical_flow/R_search_retrieval/hybrid_retriever.py", "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "canonical_flow/R_search_retrieval/lexical_index.py", "canonical_flow/R_search_retrieval/lexical_index_base.py", "canonical_flow/R_search_retrieval/reranker.py", "canonical_flow/R_search_retrieval/vector_index.py", "canonical_flow/S_synthesis_output/__init__.py", "canonical_flow/S_synthesis_output/answer_formatter.py", "canonical_flow/S_synthesis_output/answer_synthesizer.py", "canonical_flow/T_integration_storage/__init__.py", "canonical_flow/T_integration_storage/analytics_enhancement.py", "canonical_flow/T_integration_storage/compensation_engine.py", "canonical_flow/T_integration_storage/feedback_loop.py", "canonical_flow/T_integration_storage/metrics_collector.py", "canonical_flow/T_integration_storage/optimization_engine.py", "canonical_flow/X_context_construction/__init__.py", "canonical_flow/X_context_construction/context_adapter.py", "canonical_flow/X_context_construction/immutable_context.py", "canonical_flow/X_context_construction/lineage_tracker.py", "canonical_flow/__init__.py", "canonical_flow/analysis/__init__.py", "canonical_flow/analysis/artifact_generator.py", "canonical_flow/analysis/audit_logger.py", "canonical_flow/analysis/audit_validation.py", "canonical_flow/analysis/dimension_aggregator.py", "canonical_flow/analysis/dnp_causal_correction_system.py", "canonical_flow/analysis/integration_demo.py", "canonical_flow/analysis/macro_alignment.py", "canonical_flow/analysis/per_point_scoring_system.py", "canonical_flow/analysis/test_artifact_generator.py", "canonical_flow/analysis/test_unit_artifact_generator.py", "canonical_flow/calibration/__init__.py", "canonical_flow/calibration/calibration_artifacts.py", "canonical_flow/calibration/calibration_dashboard.py", "canonical_flow/calibration_dashboard.py", "canonical_flow/evaluation/__init__.py", "canonical_flow/evaluation/audit_logger.py", "canonical_flow/ingestion/__init__.py", "canonical_flow/knowledge/__init__.py", "canonical_flow/knowledge/knowledge_audit_demo.py", "canonical_flow/knowledge/knowledge_audit_system.py", "canonical_flow/knowledge/preflight_validator.py", "canonical_flow/mathematical_enhancers/__init__.py", "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "canonical_flow/mathematical_enhancers/context_enhancer.py", "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "canonical_flow/mathematical_enhancers/integration_enhancer.py", "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "canonical_flow/pipeline_state_manager.py"], "sinks": ["canonical_flow/A_analysis_nlp/__init__.py", "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "canonical_flow/A_analysis_nlp/evidence_processor.py", "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "canonical_flow/A_analysis_nlp/question_analyzer.py", "canonical_flow/G_aggregation_reporting/__init__.py", "canonical_flow/G_aggregation_reporting/audit_logger.py", "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "canonical_flow/G_aggregation_reporting/report_compiler.py", "canonical_flow/I_ingestion_preparation/__init__.py", "canonical_flow/I_ingestion_preparation/advanced_loader.py", "canonical_flow/I_ingestion_preparation/feature_extractor.py", "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "canonical_flow/I_ingestion_preparation/normative_validator.py", "canonical_flow/I_ingestion_preparation/pdf_reader.py", "canonical_flow/I_ingestion_preparation/preflight_validation.py", "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "canonical_flow/K_knowledge_extraction/__init__.py", "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "canonical_flow/K_knowledge_extraction/causal_graph.py", "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "canonical_flow/K_knowledge_extraction/chunking_processor.py", "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "canonical_flow/K_knowledge_extraction/embedding_builder.py", "canonical_flow/K_knowledge_extraction/embedding_generator.py", "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "canonical_flow/K_knowledge_extraction/gate_validator.py", "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "canonical_flow/L_classification_evaluation/__init__.py", "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "canonical_flow/L_classification_evaluation/conformal_prediction.py", "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/evidence_adapter.py", "canonical_flow/L_classification_evaluation/question_registry.py", "canonical_flow/L_classification_evaluation/schemas.py", "canonical_flow/L_classification_evaluation/score_calculator.py", "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_composition_trace.py", "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "canonical_flow/L_classification_evaluation/test_schemas.py", "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "canonical_flow/O_orchestration_control/__init__.py", "canonical_flow/O_orchestration_control/adaptive_controller.py", "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "canonical_flow/O_orchestration_control/alert_system.py", "canonical_flow/O_orchestration_control/backpressure_manager.py", "canonical_flow/O_orchestration_control/circuit_breaker.py", "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "canonical_flow/O_orchestration_control/constraint_validator.py", "canonical_flow/O_orchestration_control/contract_validator.py", "canonical_flow/O_orchestration_control/core_orchestrator.py", "canonical_flow/O_orchestration_control/decision_engine.py", "canonical_flow/O_orchestration_control/deterministic_router.py", "canonical_flow/O_orchestration_control/distributed_processor.py", "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "canonical_flow/O_orchestration_control/evidence_router.py", "canonical_flow/O_orchestration_control/exception_monitoring.py", "canonical_flow/O_orchestration_control/exception_telemetry.py", "canonical_flow/O_orchestration_control/rubric_validator.py", "canonical_flow/R_search_retrieval/__init__.py", "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "canonical_flow/R_search_retrieval/hybrid_retriever.py", "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "canonical_flow/R_search_retrieval/lexical_index.py", "canonical_flow/R_search_retrieval/lexical_index_base.py", "canonical_flow/R_search_retrieval/reranker.py", "canonical_flow/R_search_retrieval/vector_index.py", "canonical_flow/S_synthesis_output/__init__.py", "canonical_flow/S_synthesis_output/answer_formatter.py", "canonical_flow/S_synthesis_output/answer_synthesizer.py", "canonical_flow/T_integration_storage/__init__.py", "canonical_flow/T_integration_storage/analytics_enhancement.py", "canonical_flow/T_integration_storage/compensation_engine.py", "canonical_flow/T_integration_storage/feedback_loop.py", "canonical_flow/T_integration_storage/metrics_collector.py", "canonical_flow/T_integration_storage/optimization_engine.py", "canonical_flow/X_context_construction/__init__.py", "canonical_flow/X_context_construction/context_adapter.py", "canonical_flow/X_context_construction/immutable_context.py", "canonical_flow/X_context_construction/lineage_tracker.py", "canonical_flow/__init__.py", "canonical_flow/analysis/__init__.py", "canonical_flow/analysis/artifact_generator.py", "canonical_flow/analysis/audit_logger.py", "canonical_flow/analysis/audit_validation.py", "canonical_flow/analysis/dimension_aggregator.py", "canonical_flow/analysis/dnp_causal_correction_system.py", "canonical_flow/analysis/integration_demo.py", "canonical_flow/analysis/macro_alignment.py", "canonical_flow/analysis/per_point_scoring_system.py", "canonical_flow/analysis/test_artifact_generator.py", "canonical_flow/analysis/test_unit_artifact_generator.py", "canonical_flow/calibration/__init__.py", "canonical_flow/calibration/calibration_artifacts.py", "canonical_flow/calibration/calibration_dashboard.py", "canonical_flow/calibration_dashboard.py", "canonical_flow/evaluation/__init__.py", "canonical_flow/evaluation/audit_logger.py", "canonical_flow/ingestion/__init__.py", "canonical_flow/knowledge/__init__.py", "canonical_flow/knowledge/knowledge_audit_demo.py", "canonical_flow/knowledge/knowledge_audit_system.py", "canonical_flow/knowledge/preflight_validator.py", "canonical_flow/mathematical_enhancers/__init__.py", "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "canonical_flow/mathematical_enhancers/context_enhancer.py", "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "canonical_flow/mathematical_enhancers/integration_enhancer.py", "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "canonical_flow/pipeline_state_manager.py"], "isolated_nodes": ["canonical_flow/A_analysis_nlp/__init__.py", "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "canonical_flow/A_analysis_nlp/evidence_processor.py", "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "canonical_flow/A_analysis_nlp/question_analyzer.py", "canonical_flow/G_aggregation_reporting/__init__.py", "canonical_flow/G_aggregation_reporting/audit_logger.py", "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "canonical_flow/G_aggregation_reporting/report_compiler.py", "canonical_flow/I_ingestion_preparation/__init__.py", "canonical_flow/I_ingestion_preparation/advanced_loader.py", "canonical_flow/I_ingestion_preparation/feature_extractor.py", "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "canonical_flow/I_ingestion_preparation/normative_validator.py", "canonical_flow/I_ingestion_preparation/pdf_reader.py", "canonical_flow/I_ingestion_preparation/preflight_validation.py", "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "canonical_flow/K_knowledge_extraction/__init__.py", "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "canonical_flow/K_knowledge_extraction/causal_graph.py", "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "canonical_flow/K_knowledge_extraction/chunking_processor.py", "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "canonical_flow/K_knowledge_extraction/embedding_builder.py", "canonical_flow/K_knowledge_extraction/embedding_generator.py", "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "canonical_flow/K_knowledge_extraction/gate_validator.py", "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "canonical_flow/L_classification_evaluation/__init__.py", "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "canonical_flow/L_classification_evaluation/conformal_prediction.py", "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/evidence_adapter.py", "canonical_flow/L_classification_evaluation/question_registry.py", "canonical_flow/L_classification_evaluation/schemas.py", "canonical_flow/L_classification_evaluation/score_calculator.py", "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_composition_trace.py", "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "canonical_flow/L_classification_evaluation/test_schemas.py", "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "canonical_flow/O_orchestration_control/__init__.py", "canonical_flow/O_orchestration_control/adaptive_controller.py", "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "canonical_flow/O_orchestration_control/alert_system.py", "canonical_flow/O_orchestration_control/backpressure_manager.py", "canonical_flow/O_orchestration_control/circuit_breaker.py", "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "canonical_flow/O_orchestration_control/constraint_validator.py", "canonical_flow/O_orchestration_control/contract_validator.py", "canonical_flow/O_orchestration_control/core_orchestrator.py", "canonical_flow/O_orchestration_control/decision_engine.py", "canonical_flow/O_orchestration_control/deterministic_router.py", "canonical_flow/O_orchestration_control/distributed_processor.py", "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "canonical_flow/O_orchestration_control/evidence_router.py", "canonical_flow/O_orchestration_control/exception_monitoring.py", "canonical_flow/O_orchestration_control/exception_telemetry.py", "canonical_flow/O_orchestration_control/rubric_validator.py", "canonical_flow/R_search_retrieval/__init__.py", "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "canonical_flow/R_search_retrieval/hybrid_retriever.py", "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "canonical_flow/R_search_retrieval/lexical_index.py", "canonical_flow/R_search_retrieval/lexical_index_base.py", "canonical_flow/R_search_retrieval/reranker.py", "canonical_flow/R_search_retrieval/vector_index.py", "canonical_flow/S_synthesis_output/__init__.py", "canonical_flow/S_synthesis_output/answer_formatter.py", "canonical_flow/S_synthesis_output/answer_synthesizer.py", "canonical_flow/T_integration_storage/__init__.py", "canonical_flow/T_integration_storage/analytics_enhancement.py", "canonical_flow/T_integration_storage/compensation_engine.py", "canonical_flow/T_integration_storage/feedback_loop.py", "canonical_flow/T_integration_storage/metrics_collector.py", "canonical_flow/T_integration_storage/optimization_engine.py", "canonical_flow/X_context_construction/__init__.py", "canonical_flow/X_context_construction/context_adapter.py", "canonical_flow/X_context_construction/immutable_context.py", "canonical_flow/X_context_construction/lineage_tracker.py", "canonical_flow/__init__.py", "canonical_flow/analysis/__init__.py", "canonical_flow/analysis/artifact_generator.py", "canonical_flow/analysis/audit_logger.py", "canonical_flow/analysis/audit_validation.py", "canonical_flow/analysis/dimension_aggregator.py", "canonical_flow/analysis/dnp_causal_correction_system.py", "canonical_flow/analysis/integration_demo.py", "canonical_flow/analysis/macro_alignment.py", "canonical_flow/analysis/per_point_scoring_system.py", "canonical_flow/analysis/test_artifact_generator.py", "canonical_flow/analysis/test_unit_artifact_generator.py", "canonical_flow/calibration/__init__.py", "canonical_flow/calibration/calibration_artifacts.py", "canonical_flow/calibration/calibration_dashboard.py", "canonical_flow/calibration_dashboard.py", "canonical_flow/evaluation/__init__.py", "canonical_flow/evaluation/audit_logger.py", "canonical_flow/ingestion/__init__.py", "canonical_flow/knowledge/__init__.py", "canonical_flow/knowledge/knowledge_audit_demo.py", "canonical_flow/knowledge/knowledge_audit_system.py", "canonical_flow/knowledge/preflight_validator.py", "canonical_flow/mathematical_enhancers/__init__.py", "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "canonical_flow/mathematical_enhancers/context_enhancer.py", "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "canonical_flow/mathematical_enhancers/integration_enhancer.py", "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "canonical_flow/pipeline_state_manager.py"], "disconnected_components": [["canonical_flow/A_analysis_nlp/__init__.py"], ["canonical_flow/A_analysis_nlp/adaptive_analyzer.py"], ["canonical_flow/A_analysis_nlp/decalogo_question_registry.py"], ["canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py"], ["canonical_flow/A_analysis_nlp/evaluation_driven_processor.py"], ["canonical_flow/A_analysis_nlp/evidence_processor.py"], ["canonical_flow/A_analysis_nlp/evidence_validation_model.py"], ["canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py"], ["canonical_flow/A_analysis_nlp/implementacion_mapeo.py"], ["canonical_flow/A_analysis_nlp/question_analyzer.py"], ["canonical_flow/G_aggregation_reporting/__init__.py"], ["canonical_flow/G_aggregation_reporting/audit_logger.py"], ["canonical_flow/G_aggregation_reporting/meso_aggregator.py"], ["canonical_flow/G_aggregation_reporting/report_compiler.py"], ["canonical_flow/I_ingestion_preparation/__init__.py"], ["canonical_flow/I_ingestion_preparation/advanced_loader.py"], ["canonical_flow/I_ingestion_preparation/feature_extractor.py"], ["canonical_flow/I_ingestion_preparation/gate_validation_system.py"], ["canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py"], ["canonical_flow/I_ingestion_preparation/normative_validator.py"], ["canonical_flow/I_ingestion_preparation/pdf_reader.py"], ["canonical_flow/I_ingestion_preparation/preflight_validation.py"], ["canonical_flow/I_ingestion_preparation/raw_data_generator.py"], ["canonical_flow/K_knowledge_extraction/__init__.py"], ["canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py"], ["canonical_flow/K_knowledge_extraction/causal_dnp_framework.py"], ["canonical_flow/K_knowledge_extraction/causal_graph.py"], ["canonical_flow/K_knowledge_extraction/causal_graph_constructor.py"], ["canonical_flow/K_knowledge_extraction/chunking_processor.py"], ["canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py"], ["canonical_flow/K_knowledge_extraction/embedding_builder.py"], ["canonical_flow/K_knowledge_extraction/embedding_generator.py"], ["canonical_flow/K_knowledge_extraction/entity_concept_extractor.py"], ["canonical_flow/K_knowledge_extraction/gate_validator.py"], ["canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py"], ["canonical_flow/L_classification_evaluation/__init__.py"], ["canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py"], ["canonical_flow/L_classification_evaluation/conformal_prediction.py"], ["canonical_flow/L_classification_evaluation/conformal_risk_control.py"], ["canonical_flow/L_classification_evaluation/decalogo_scoring_system.py"], ["canonical_flow/L_classification_evaluation/demo_schema_validation.py"], ["canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py"], ["canonical_flow/L_classification_evaluation/evidence_adapter.py"], ["canonical_flow/L_classification_evaluation/question_registry.py"], ["canonical_flow/L_classification_evaluation/schemas.py"], ["canonical_flow/L_classification_evaluation/score_calculator.py"], ["canonical_flow/L_classification_evaluation/stage_orchestrator.py"], ["canonical_flow/L_classification_evaluation/test_composition_trace.py"], ["canonical_flow/L_classification_evaluation/test_conformal_prediction.py"], ["canonical_flow/L_classification_evaluation/test_evidence_adapter.py"], ["canonical_flow/L_classification_evaluation/test_schemas.py"], ["canonical_flow/L_classification_evaluation/test_stage_orchestrator.py"], ["canonical_flow/L_classification_evaluation/test_thresholds_integration.py"], ["canonical_flow/O_orchestration_control/__init__.py"], ["canonical_flow/O_orchestration_control/adaptive_controller.py"], ["canonical_flow/O_orchestration_control/airflow_orchestrator.py"], ["canonical_flow/O_orchestration_control/alert_system.py"], ["canonical_flow/O_orchestration_control/backpressure_manager.py"], ["canonical_flow/O_orchestration_control/circuit_breaker.py"], ["canonical_flow/O_orchestration_control/confluent_orchestrator.py"], ["canonical_flow/O_orchestration_control/constraint_validator.py"], ["canonical_flow/O_orchestration_control/contract_validator.py"], ["canonical_flow/O_orchestration_control/core_orchestrator.py"], ["canonical_flow/O_orchestration_control/decision_engine.py"], ["canonical_flow/O_orchestration_control/deterministic_router.py"], ["canonical_flow/O_orchestration_control/distributed_processor.py"], ["canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py"], ["canonical_flow/O_orchestration_control/evidence_router.py"], ["canonical_flow/O_orchestration_control/exception_monitoring.py"], ["canonical_flow/O_orchestration_control/exception_telemetry.py"], ["canonical_flow/O_orchestration_control/rubric_validator.py"], ["canonical_flow/R_search_retrieval/__init__.py"], ["canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py"], ["canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py"], ["canonical_flow/R_search_retrieval/hybrid_retrieval_core.py"], ["canonical_flow/R_search_retrieval/hybrid_retriever.py"], ["canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py"], ["canonical_flow/R_search_retrieval/lexical_index.py"], ["canonical_flow/R_search_retrieval/lexical_index_base.py"], ["canonical_flow/R_search_retrieval/reranker.py"], ["canonical_flow/R_search_retrieval/vector_index.py"], ["canonical_flow/S_synthesis_output/__init__.py"], ["canonical_flow/S_synthesis_output/answer_formatter.py"], ["canonical_flow/S_synthesis_output/answer_synthesizer.py"], ["canonical_flow/T_integration_storage/__init__.py"], ["canonical_flow/T_integration_storage/analytics_enhancement.py"], ["canonical_flow/T_integration_storage/compensation_engine.py"], ["canonical_flow/T_integration_storage/feedback_loop.py"], ["canonical_flow/T_integration_storage/metrics_collector.py"], ["canonical_flow/T_integration_storage/optimization_engine.py"], ["canonical_flow/X_context_construction/__init__.py"], ["canonical_flow/X_context_construction/context_adapter.py"], ["canonical_flow/X_context_construction/immutable_context.py"], ["canonical_flow/X_context_construction/lineage_tracker.py"], ["canonical_flow/__init__.py"], ["canonical_flow/analysis/__init__.py"], ["canonical_flow/analysis/artifact_generator.py"], ["canonical_flow/analysis/audit_logger.py"], ["canonical_flow/analysis/audit_validation.py"], ["canonical_flow/analysis/dimension_aggregator.py"], ["canonical_flow/analysis/dnp_causal_correction_system.py"], ["canonical_flow/analysis/integration_demo.py"], ["canonical_flow/analysis/macro_alignment.py"], ["canonical_flow/analysis/per_point_scoring_system.py"], ["canonical_flow/analysis/test_artifact_generator.py"], ["canonical_flow/analysis/test_unit_artifact_generator.py"], ["canonical_flow/calibration/__init__.py"], ["canonical_flow/calibration/calibration_artifacts.py"], ["canonical_flow/calibration/calibration_dashboard.py"], ["canonical_flow/calibration_dashboard.py"], ["canonical_flow/evaluation/__init__.py"], ["canonical_flow/evaluation/audit_logger.py"], ["canonical_flow/ingestion/__init__.py"], ["canonical_flow/knowledge/__init__.py"], ["canonical_flow/knowledge/knowledge_audit_demo.py"], ["canonical_flow/knowledge/knowledge_audit_system.py"], ["canonical_flow/knowledge/preflight_validator.py"], ["canonical_flow/mathematical_enhancers/__init__.py"], ["canonical_flow/mathematical_enhancers/aggregation_enhancer.py"], ["canonical_flow/mathematical_enhancers/analysis_enhancer.py"], ["canonical_flow/mathematical_enhancers/context_enhancer.py"], ["canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py"], ["canonical_flow/mathematical_enhancers/ingestion_enhancer.py"], ["canonical_flow/mathematical_enhancers/integration_enhancer.py"], ["canonical_flow/mathematical_enhancers/knowledge_enhancer.py"], ["canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py"], ["canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py"], ["canonical_flow/mathematical_enhancers/orchestration_enhancer.py"], ["canonical_flow/mathematical_enhancers/pre_flight_validator.py"], ["canonical_flow/mathematical_enhancers/retrieval_enhancer.py"], ["canonical_flow/mathematical_enhancers/scoring_enhancer.py"], ["canonical_flow/pipeline_state_manager.py"]], "missing_files": [], "blank_or_corrupted": [], "unused_assets": ["egw_query_expansion/configs/__init__.py", "egw_query_expansion/core/__init__.py", "egw_query_expansion/core/auto_enhancement_orchestrator.py", "egw_query_expansion/core/confluent_orchestrator.py", "egw_query_expansion/core/conformal_risk_control.py", "egw_query_expansion/core/context_adapter.py", "egw_query_expansion/core/deterministic_router.py", "egw_query_expansion/core/early_error_detector.py", "egw_query_expansion/core/gw_alignment.py", "egw_query_expansion/core/hybrid_retrieval.py", "egw_query_expansion/core/immutable_context.py", "egw_query_expansion/core/import_safety.py", "egw_query_expansion/core/linear_type_enforcer.py", "egw_query_expansion/core/m_c_c_engine_monotone_compliance_evaluator.py", "egw_query_expansion/core/m_c_c_label_evaluation_engine.py", "egw_query_expansion/core/mathematical_safety_controller.py", "egw_query_expansion/core/pattern_matcher.py", "egw_query_expansion/core/permutation_invariant_processor.py", "egw_query_expansion/core/project_analyzer.py", "egw_query_expansion/core/query_generator.py", "egw_query_expansion/core/safety_controller.py", "egw_query_expansion/core/submodular_task_selector.py", "egw_query_expansion/core/task_selector_demo.py", "egw_query_expansion/core/test_import_safety.py", "egw_query_expansion/core/total_ordering.py", "egw_query_expansion/mathematical_foundations.py", "egw_query_expansion/mocks/__init__.py", "egw_query_expansion/mocks/mock_faiss.py", "egw_query_expansion/mocks/mock_numpy.py", "egw_query_expansion/mocks/mock_sklearn.py", "egw_query_expansion/mocks/mock_torch.py", "egw_query_expansion/mocks/mock_utils.py", "egw_query_expansion/tests/__init__.py", "egw_query_expansion/tests/test_auto_enhancement_orchestrator.py", "egw_query_expansion/tests/test_beir_evaluation.py", "egw_query_expansion/tests/test_confluent_orchestrator.py", "egw_query_expansion/tests/test_conformal_risk_control.py", "egw_query_expansion/tests/test_deterministic_router.py", "egw_query_expansion/tests/test_distributed_processor.py", "egw_query_expansion/tests/test_early_error_detector.py", "egw_query_expansion/tests/test_immutable_context.py", "egw_query_expansion/tests/test_library_compatibility.py", "egw_query_expansion/tests/test_mathematical_foundations.py", "egw_query_expansion/tests/test_mathematical_safety_controller.py", "egw_query_expansion/tests/test_permutation_invariant_processor.py", "egw_query_expansion/tests/test_safety_import.py", "egw_query_expansion/tests/test_submodular_selector.py", "egw_query_expansion/tests/test_submodular_task_selector.py", "retrieval_engine/__init__.py", "retrieval_engine/hybrid_retriever.py", "retrieval_engine/lexical_index.py", "retrieval_engine/vector_index.py", "semantic_reranking/__init__.py", "semantic_reranking/reranker.py"], "integrated_assets": [{"name": "canonical_flow/A_analysis_nlp/__init__.py", "file_path": "canonical_flow/A_analysis_nlp/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 2098, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "file_path": "canonical_flow/A_analysis_nlp/adaptive_analyzer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 15264, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "file_path": "canonical_flow/A_analysis_nlp/decalogo_question_registry.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28802, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "file_path": "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 21508, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "file_path": "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 27887, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/evidence_processor.py", "file_path": "canonical_flow/A_analysis_nlp/evidence_processor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 30027, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "file_path": "canonical_flow/A_analysis_nlp/evidence_validation_model.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 25352, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "file_path": "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 27922, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "file_path": "canonical_flow/A_analysis_nlp/implementacion_mapeo.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 20783, "blank": false}, {"name": "canonical_flow/A_analysis_nlp/question_analyzer.py", "file_path": "canonical_flow/A_analysis_nlp/question_analyzer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 53001, "blank": false}, {"name": "canonical_flow/G_aggregation_reporting/__init__.py", "file_path": "canonical_flow/G_aggregation_reporting/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 141, "blank": false}, {"name": "canonical_flow/G_aggregation_reporting/audit_logger.py", "file_path": "canonical_flow/G_aggregation_reporting/audit_logger.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 13970, "blank": false}, {"name": "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "file_path": "canonical_flow/G_aggregation_reporting/meso_aggregator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 17302, "blank": false}, {"name": "canonical_flow/G_aggregation_reporting/report_compiler.py", "file_path": "canonical_flow/G_aggregation_reporting/report_compiler.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 25063, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/__init__.py", "file_path": "canonical_flow/I_ingestion_preparation/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1558, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/advanced_loader.py", "file_path": "canonical_flow/I_ingestion_preparation/advanced_loader.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3244, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/feature_extractor.py", "file_path": "canonical_flow/I_ingestion_preparation/feature_extractor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3525, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "file_path": "canonical_flow/I_ingestion_preparation/gate_validation_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 33410, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "file_path": "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28167, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/normative_validator.py", "file_path": "canonical_flow/I_ingestion_preparation/normative_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3275, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/pdf_reader.py", "file_path": "canonical_flow/I_ingestion_preparation/pdf_reader.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3757, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/preflight_validation.py", "file_path": "canonical_flow/I_ingestion_preparation/preflight_validation.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28301, "blank": false}, {"name": "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "file_path": "canonical_flow/I_ingestion_preparation/raw_data_generator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 40228, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/__init__.py", "file_path": "canonical_flow/K_knowledge_extraction/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 234, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "file_path": "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28682, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "file_path": "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1906, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/causal_graph.py", "file_path": "canonical_flow/K_knowledge_extraction/causal_graph.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1882, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "file_path": "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 25407, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/chunking_processor.py", "file_path": "canonical_flow/K_knowledge_extraction/chunking_processor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28181, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "file_path": "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 30044, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/embedding_builder.py", "file_path": "canonical_flow/K_knowledge_extraction/embedding_builder.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1897, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/embedding_generator.py", "file_path": "canonical_flow/K_knowledge_extraction/embedding_generator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1903, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "file_path": "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 27869, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/gate_validator.py", "file_path": "canonical_flow/K_knowledge_extraction/gate_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 18825, "blank": false}, {"name": "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "file_path": "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 9636, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/__init__.py", "file_path": "canonical_flow/L_classification_evaluation/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 470, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "file_path": "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1925, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/conformal_prediction.py", "file_path": "canonical_flow/L_classification_evaluation/conformal_prediction.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 22528, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "file_path": "canonical_flow/L_classification_evaluation/conformal_risk_control.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1997, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "file_path": "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 14916, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "file_path": "canonical_flow/L_classification_evaluation/demo_schema_validation.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 12113, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "file_path": "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 17176, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/evidence_adapter.py", "file_path": "canonical_flow/L_classification_evaluation/evidence_adapter.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 17731, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/question_registry.py", "file_path": "canonical_flow/L_classification_evaluation/question_registry.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 15847, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/schemas.py", "file_path": "canonical_flow/L_classification_evaluation/schemas.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 19613, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/score_calculator.py", "file_path": "canonical_flow/L_classification_evaluation/score_calculator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1904, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "file_path": "canonical_flow/L_classification_evaluation/stage_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 26250, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_composition_trace.py", "file_path": "canonical_flow/L_classification_evaluation/test_composition_trace.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 12768, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "file_path": "canonical_flow/L_classification_evaluation/test_conformal_prediction.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 17087, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "file_path": "canonical_flow/L_classification_evaluation/test_evidence_adapter.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 13780, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_schemas.py", "file_path": "canonical_flow/L_classification_evaluation/test_schemas.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 15762, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "file_path": "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 19134, "blank": false}, {"name": "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "file_path": "canonical_flow/L_classification_evaluation/test_thresholds_integration.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 10355, "blank": false}, {"name": "canonical_flow/O_orchestration_control/__init__.py", "file_path": "canonical_flow/O_orchestration_control/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 37, "blank": false}, {"name": "canonical_flow/O_orchestration_control/adaptive_controller.py", "file_path": "canonical_flow/O_orchestration_control/adaptive_controller.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1905, "blank": false}, {"name": "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "file_path": "canonical_flow/O_orchestration_control/airflow_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1908, "blank": false}, {"name": "canonical_flow/O_orchestration_control/alert_system.py", "file_path": "canonical_flow/O_orchestration_control/alert_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1884, "blank": false}, {"name": "canonical_flow/O_orchestration_control/backpressure_manager.py", "file_path": "canonical_flow/O_orchestration_control/backpressure_manager.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1908, "blank": false}, {"name": "canonical_flow/O_orchestration_control/circuit_breaker.py", "file_path": "canonical_flow/O_orchestration_control/circuit_breaker.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1893, "blank": false}, {"name": "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "file_path": "canonical_flow/O_orchestration_control/confluent_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1914, "blank": false}, {"name": "canonical_flow/O_orchestration_control/constraint_validator.py", "file_path": "canonical_flow/O_orchestration_control/constraint_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1908, "blank": false}, {"name": "canonical_flow/O_orchestration_control/contract_validator.py", "file_path": "canonical_flow/O_orchestration_control/contract_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1902, "blank": false}, {"name": "canonical_flow/O_orchestration_control/core_orchestrator.py", "file_path": "canonical_flow/O_orchestration_control/core_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1899, "blank": false}, {"name": "canonical_flow/O_orchestration_control/decision_engine.py", "file_path": "canonical_flow/O_orchestration_control/decision_engine.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1893, "blank": false}, {"name": "canonical_flow/O_orchestration_control/deterministic_router.py", "file_path": "canonical_flow/O_orchestration_control/deterministic_router.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1908, "blank": false}, {"name": "canonical_flow/O_orchestration_control/distributed_processor.py", "file_path": "canonical_flow/O_orchestration_control/distributed_processor.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1911, "blank": false}, {"name": "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "file_path": "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1926, "blank": false}, {"name": "canonical_flow/O_orchestration_control/evidence_router.py", "file_path": "canonical_flow/O_orchestration_control/evidence_router.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1893, "blank": false}, {"name": "canonical_flow/O_orchestration_control/exception_monitoring.py", "file_path": "canonical_flow/O_orchestration_control/exception_monitoring.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1908, "blank": false}, {"name": "canonical_flow/O_orchestration_control/exception_telemetry.py", "file_path": "canonical_flow/O_orchestration_control/exception_telemetry.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1905, "blank": false}, {"name": "canonical_flow/O_orchestration_control/rubric_validator.py", "file_path": "canonical_flow/O_orchestration_control/rubric_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1896, "blank": false}, {"name": "canonical_flow/R_search_retrieval/__init__.py", "file_path": "canonical_flow/R_search_retrieval/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 32, "blank": false}, {"name": "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "file_path": "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1928, "blank": false}, {"name": "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "file_path": "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1907, "blank": false}, {"name": "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "file_path": "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1886, "blank": false}, {"name": "canonical_flow/R_search_retrieval/hybrid_retriever.py", "file_path": "canonical_flow/R_search_retrieval/hybrid_retriever.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1937, "blank": false}, {"name": "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "file_path": "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1937, "blank": false}, {"name": "canonical_flow/R_search_retrieval/lexical_index.py", "file_path": "canonical_flow/R_search_retrieval/lexical_index.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1877, "blank": false}, {"name": "canonical_flow/R_search_retrieval/lexical_index_base.py", "file_path": "canonical_flow/R_search_retrieval/lexical_index_base.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1928, "blank": false}, {"name": "canonical_flow/R_search_retrieval/reranker.py", "file_path": "canonical_flow/R_search_retrieval/reranker.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1919, "blank": false}, {"name": "canonical_flow/R_search_retrieval/vector_index.py", "file_path": "canonical_flow/R_search_retrieval/vector_index.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1925, "blank": false}, {"name": "canonical_flow/S_synthesis_output/__init__.py", "file_path": "canonical_flow/S_synthesis_output/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 32, "blank": false}, {"name": "canonical_flow/S_synthesis_output/answer_formatter.py", "file_path": "canonical_flow/S_synthesis_output/answer_formatter.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1886, "blank": false}, {"name": "canonical_flow/S_synthesis_output/answer_synthesizer.py", "file_path": "canonical_flow/S_synthesis_output/answer_synthesizer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1892, "blank": false}, {"name": "canonical_flow/T_integration_storage/__init__.py", "file_path": "canonical_flow/T_integration_storage/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 35, "blank": false}, {"name": "canonical_flow/T_integration_storage/analytics_enhancement.py", "file_path": "canonical_flow/T_integration_storage/analytics_enhancement.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1907, "blank": false}, {"name": "canonical_flow/T_integration_storage/compensation_engine.py", "file_path": "canonical_flow/T_integration_storage/compensation_engine.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1901, "blank": false}, {"name": "canonical_flow/T_integration_storage/feedback_loop.py", "file_path": "canonical_flow/T_integration_storage/feedback_loop.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1883, "blank": false}, {"name": "canonical_flow/T_integration_storage/metrics_collector.py", "file_path": "canonical_flow/T_integration_storage/metrics_collector.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1895, "blank": false}, {"name": "canonical_flow/T_integration_storage/optimization_engine.py", "file_path": "canonical_flow/T_integration_storage/optimization_engine.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1901, "blank": false}, {"name": "canonical_flow/X_context_construction/__init__.py", "file_path": "canonical_flow/X_context_construction/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 36, "blank": false}, {"name": "canonical_flow/X_context_construction/context_adapter.py", "file_path": "canonical_flow/X_context_construction/context_adapter.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1891, "blank": false}, {"name": "canonical_flow/X_context_construction/immutable_context.py", "file_path": "canonical_flow/X_context_construction/immutable_context.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1897, "blank": false}, {"name": "canonical_flow/X_context_construction/lineage_tracker.py", "file_path": "canonical_flow/X_context_construction/lineage_tracker.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 1891, "blank": false}, {"name": "canonical_flow/__init__.py", "file_path": "canonical_flow/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 586, "blank": false}, {"name": "canonical_flow/analysis/__init__.py", "file_path": "canonical_flow/analysis/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 142, "blank": false}, {"name": "canonical_flow/analysis/artifact_generator.py", "file_path": "canonical_flow/analysis/artifact_generator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 20761, "blank": false}, {"name": "canonical_flow/analysis/audit_logger.py", "file_path": "canonical_flow/analysis/audit_logger.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 24503, "blank": false}, {"name": "canonical_flow/analysis/audit_validation.py", "file_path": "canonical_flow/analysis/audit_validation.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 18902, "blank": false}, {"name": "canonical_flow/analysis/dimension_aggregator.py", "file_path": "canonical_flow/analysis/dimension_aggregator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 26324, "blank": false}, {"name": "canonical_flow/analysis/dnp_causal_correction_system.py", "file_path": "canonical_flow/analysis/dnp_causal_correction_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 8241, "blank": false}, {"name": "canonical_flow/analysis/integration_demo.py", "file_path": "canonical_flow/analysis/integration_demo.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 11843, "blank": false}, {"name": "canonical_flow/analysis/macro_alignment.py", "file_path": "canonical_flow/analysis/macro_alignment.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 26256, "blank": false}, {"name": "canonical_flow/analysis/per_point_scoring_system.py", "file_path": "canonical_flow/analysis/per_point_scoring_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 24162, "blank": false}, {"name": "canonical_flow/analysis/test_artifact_generator.py", "file_path": "canonical_flow/analysis/test_artifact_generator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3404, "blank": false}, {"name": "canonical_flow/analysis/test_unit_artifact_generator.py", "file_path": "canonical_flow/analysis/test_unit_artifact_generator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 7640, "blank": false}, {"name": "canonical_flow/calibration/__init__.py", "file_path": "canonical_flow/calibration/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 651, "blank": false}, {"name": "canonical_flow/calibration/calibration_artifacts.py", "file_path": "canonical_flow/calibration/calibration_artifacts.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 4719, "blank": false}, {"name": "canonical_flow/calibration/calibration_dashboard.py", "file_path": "canonical_flow/calibration/calibration_dashboard.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 20553, "blank": false}, {"name": "canonical_flow/calibration_dashboard.py", "file_path": "canonical_flow/calibration_dashboard.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 11458, "blank": false}, {"name": "canonical_flow/evaluation/__init__.py", "file_path": "canonical_flow/evaluation/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 182, "blank": false}, {"name": "canonical_flow/evaluation/audit_logger.py", "file_path": "canonical_flow/evaluation/audit_logger.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 27878, "blank": false}, {"name": "canonical_flow/ingestion/__init__.py", "file_path": "canonical_flow/ingestion/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 5817, "blank": false}, {"name": "canonical_flow/knowledge/__init__.py", "file_path": "canonical_flow/knowledge/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 529, "blank": false}, {"name": "canonical_flow/knowledge/knowledge_audit_demo.py", "file_path": "canonical_flow/knowledge/knowledge_audit_demo.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 7256, "blank": false}, {"name": "canonical_flow/knowledge/knowledge_audit_system.py", "file_path": "canonical_flow/knowledge/knowledge_audit_system.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 17884, "blank": false}, {"name": "canonical_flow/knowledge/preflight_validator.py", "file_path": "canonical_flow/knowledge/preflight_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 30264, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/__init__.py", "file_path": "canonical_flow/mathematical_enhancers/__init__.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 3613, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/aggregation_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 58377, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/analysis_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 54255, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/context_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/context_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 42742, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "file_path": "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 22292, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/ingestion_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 66098, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/integration_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/integration_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 28097, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/knowledge_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 29703, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "file_path": "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 79357, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "file_path": "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 37261, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/orchestration_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 60653, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "file_path": "canonical_flow/mathematical_enhancers/pre_flight_validator.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 23205, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/retrieval_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 30586, "blank": false}, {"name": "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "file_path": "canonical_flow/mathematical_enhancers/scoring_enhancer.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 24681, "blank": false}, {"name": "canonical_flow/pipeline_state_manager.py", "file_path": "canonical_flow/pipeline_state_manager.py", "stage": "canonical_flow", "dependencies": [], "exists": true, "size_bytes": 22924, "blank": false}], "math_enhancers_enabled": false, "artifacts": {"canonical_order_manifest": "/Users/recovered/Downloads/PROYECTO FARFAN/canonical_order_manifest.json", "canonical_sequence_txt": "/Users/recovered/Downloads/PROYECTO FARFAN/canonical_sequence.txt"}}
