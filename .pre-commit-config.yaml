repos:
  # Dependency Doctor - Architecture Validator
  - repo: local
    hooks:
      - id: dep-doctor
        name: Dependency Doctor - Architecture Validator
        entry: python3 tools/dep_doctor.py
        language: system
        pass_filenames: false
        files: '\.py$'
        always_run: true

  # Ruff linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.4
    hooks:
      # Run the linter
      - id: ruff
        args: ["--fix"]
        types_or: [python, pyi]
      # Run the formatter  
      - id: ruff-format
        types_or: [python, pyi]

  # MyPy static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        args: [
          "--config-file=mypy.ini",
          "--strict",
          "--python-version=3.8",
          "--namespace-packages",
        ]
        additional_dependencies: [
          types-PyYAML,
          types-requests,
          types-setuptools,
          types-toml,
          pydantic,
          torch,
          transformers,
          datasets,
        ]
        files: ^(egw_query_expansion|src|scripts)/.*\.py$

  # Pyright static type checking
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.338
    hooks:
      - id: pyright
        args: ["--project=pyproject.toml"]
        additional_dependencies: [
          pydantic,
          torch, 
          transformers,
          datasets,
        ]
        files: ^(egw_query_expansion|src|scripts)/.*\.py$

  # Import validation script
  - repo: local
    hooks:
      - id: import-validation
        name: Import Validation
        entry: python scripts/validate_imports.py
        language: system
        files: ^(egw_query_expansion|src|scripts)/.*\.py$
        pass_filenames: false

  # Circular import detection
  - repo: local
    hooks:
      - id: circular-import-detection
        name: Circular Import Detection
        entry: python scripts/detect_circular_imports.py
        language: system
        files: ^(egw_query_expansion|src|scripts)/.*\.py$
        pass_filenames: false

  # Additional security and quality checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]
        files: ^(egw_query_expansion|src|scripts)/.*\.py$

  # YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ["-d", "relaxed"]
        files: \.(yaml|yml)$

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']
        files: ^tests/.*\.py$

  # Legacy pytest hook (keeping for compatibility)
  - repo: https://github.com/pytest-dev/pytest
    rev: v8.3.3
    hooks:
      - id: pytest
        name: Run tests
        args: ["egw_query_expansion/tests/", "-v", "--tb=short"]
        pass_filenames: false
        additional_dependencies: ["pytest-cov"]
