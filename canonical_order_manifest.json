{
  "sequence": [
    "canonical_flow/A_analysis_nlp/__init__.py",
    "canonical_flow/A_analysis_nlp/adaptive_analyzer.py",
    "canonical_flow/A_analysis_nlp/decalogo_question_registry.py",
    "canonical_flow/A_analysis_nlp/dnp_alignment_adapter.py",
    "canonical_flow/A_analysis_nlp/evaluation_driven_processor.py",
    "canonical_flow/A_analysis_nlp/evidence_processor.py",
    "canonical_flow/A_analysis_nlp/evidence_validation_model.py",
    "canonical_flow/A_analysis_nlp/extractor_evidencias_contextual.py",
    "canonical_flow/A_analysis_nlp/implementacion_mapeo.py",
    "canonical_flow/A_analysis_nlp/question_analyzer.py",
    "canonical_flow/G_aggregation_reporting/__init__.py",
    "canonical_flow/G_aggregation_reporting/audit_logger.py",
    "canonical_flow/G_aggregation_reporting/meso_aggregator.py",
    "canonical_flow/G_aggregation_reporting/report_compiler.py",
    "canonical_flow/I_ingestion_preparation/__init__.py",
    "canonical_flow/I_ingestion_preparation/advanced_loader.py",
    "canonical_flow/I_ingestion_preparation/feature_extractor.py",
    "canonical_flow/I_ingestion_preparation/gate_validation_system.py",
    "canonical_flow/I_ingestion_preparation/ingestion_orchestrator.py",
    "canonical_flow/I_ingestion_preparation/normative_validator.py",
    "canonical_flow/I_ingestion_preparation/pdf_reader.py",
    "canonical_flow/I_ingestion_preparation/preflight_validation.py",
    "canonical_flow/I_ingestion_preparation/raw_data_generator.py",
    "canonical_flow/K_knowledge_extraction/__init__.py",
    "canonical_flow/K_knowledge_extraction/advanced_knowledge_graph_builder.py",
    "canonical_flow/K_knowledge_extraction/causal_dnp_framework.py",
    "canonical_flow/K_knowledge_extraction/causal_graph.py",
    "canonical_flow/K_knowledge_extraction/causal_graph_constructor.py",
    "canonical_flow/K_knowledge_extraction/chunking_processor.py",
    "canonical_flow/K_knowledge_extraction/dnp_alignment_analyzer.py",
    "canonical_flow/K_knowledge_extraction/embedding_builder.py",
    "canonical_flow/K_knowledge_extraction/embedding_generator.py",
    "canonical_flow/K_knowledge_extraction/entity_concept_extractor.py",
    "canonical_flow/K_knowledge_extraction/gate_validator.py",
    "canonical_flow/K_knowledge_extraction/test_causal_graph_constructor.py",
    "canonical_flow/L_classification_evaluation/__init__.py",
    "canonical_flow/L_classification_evaluation/adaptive_scoring_engine.py",
    "canonical_flow/L_classification_evaluation/conformal_prediction.py",
    "canonical_flow/L_classification_evaluation/conformal_risk_control.py",
    "canonical_flow/L_classification_evaluation/decalogo_scoring_system.py",
    "canonical_flow/L_classification_evaluation/demo_schema_validation.py",
    "canonical_flow/L_classification_evaluation/demo_stage_orchestrator.py",
    "canonical_flow/L_classification_evaluation/evidence_adapter.py",
    "canonical_flow/L_classification_evaluation/question_registry.py",
    "canonical_flow/L_classification_evaluation/schemas.py",
    "canonical_flow/L_classification_evaluation/score_calculator.py",
    "canonical_flow/L_classification_evaluation/stage_orchestrator.py",
    "canonical_flow/L_classification_evaluation/test_composition_trace.py",
    "canonical_flow/L_classification_evaluation/test_conformal_prediction.py",
    "canonical_flow/L_classification_evaluation/test_evidence_adapter.py",
    "canonical_flow/L_classification_evaluation/test_schemas.py",
    "canonical_flow/L_classification_evaluation/test_stage_orchestrator.py",
    "canonical_flow/L_classification_evaluation/test_thresholds_integration.py",
    "canonical_flow/O_orchestration_control/__init__.py",
    "canonical_flow/O_orchestration_control/adaptive_controller.py",
    "canonical_flow/O_orchestration_control/airflow_orchestrator.py",
    "canonical_flow/O_orchestration_control/alert_system.py",
    "canonical_flow/O_orchestration_control/backpressure_manager.py",
    "canonical_flow/O_orchestration_control/circuit_breaker.py",
    "canonical_flow/O_orchestration_control/confluent_orchestrator.py",
    "canonical_flow/O_orchestration_control/constraint_validator.py",
    "canonical_flow/O_orchestration_control/contract_validator.py",
    "canonical_flow/O_orchestration_control/core_orchestrator.py",
    "canonical_flow/O_orchestration_control/decision_engine.py",
    "canonical_flow/O_orchestration_control/deterministic_router.py",
    "canonical_flow/O_orchestration_control/distributed_processor.py",
    "canonical_flow/O_orchestration_control/enhanced_core_orchestrator.py",
    "canonical_flow/O_orchestration_control/evidence_router.py",
    "canonical_flow/O_orchestration_control/exception_monitoring.py",
    "canonical_flow/O_orchestration_control/exception_telemetry.py",
    "canonical_flow/O_orchestration_control/rubric_validator.py",
    "canonical_flow/R_search_retrieval/__init__.py",
    "canonical_flow/R_search_retrieval/deterministic_hybrid_retrieval.py",
    "canonical_flow/R_search_retrieval/hybrid_retrieval_bridge.py",
    "canonical_flow/R_search_retrieval/hybrid_retrieval_core.py",
    "canonical_flow/R_search_retrieval/hybrid_retriever.py",
    "canonical_flow/R_search_retrieval/intelligent_recommendation_engine.py",
    "canonical_flow/R_search_retrieval/lexical_index.py",
    "canonical_flow/R_search_retrieval/lexical_index_base.py",
    "canonical_flow/R_search_retrieval/reranker.py",
    "canonical_flow/R_search_retrieval/vector_index.py",
    "canonical_flow/S_synthesis_output/__init__.py",
    "canonical_flow/S_synthesis_output/answer_formatter.py",
    "canonical_flow/S_synthesis_output/answer_synthesizer.py",
    "canonical_flow/T_integration_storage/__init__.py",
    "canonical_flow/T_integration_storage/analytics_enhancement.py",
    "canonical_flow/T_integration_storage/compensation_engine.py",
    "canonical_flow/T_integration_storage/feedback_loop.py",
    "canonical_flow/T_integration_storage/metrics_collector.py",
    "canonical_flow/T_integration_storage/optimization_engine.py",
    "canonical_flow/X_context_construction/__init__.py",
    "canonical_flow/X_context_construction/context_adapter.py",
    "canonical_flow/X_context_construction/immutable_context.py",
    "canonical_flow/X_context_construction/lineage_tracker.py",
    "canonical_flow/__init__.py",
    "canonical_flow/analysis/__init__.py",
    "canonical_flow/analysis/artifact_generator.py",
    "canonical_flow/analysis/audit_logger.py",
    "canonical_flow/analysis/audit_validation.py",
    "canonical_flow/analysis/dimension_aggregator.py",
    "canonical_flow/analysis/dnp_causal_correction_system.py",
    "canonical_flow/analysis/integration_demo.py",
    "canonical_flow/analysis/macro_alignment.py",
    "canonical_flow/analysis/per_point_scoring_system.py",
    "canonical_flow/analysis/test_artifact_generator.py",
    "canonical_flow/analysis/test_unit_artifact_generator.py",
    "canonical_flow/calibration/__init__.py",
    "canonical_flow/calibration/calibration_artifacts.py",
    "canonical_flow/calibration/calibration_dashboard.py",
    "canonical_flow/calibration_dashboard.py",
    "canonical_flow/evaluation/__init__.py",
    "canonical_flow/evaluation/audit_logger.py",
    "canonical_flow/ingestion/__init__.py",
    "canonical_flow/knowledge/__init__.py",
    "canonical_flow/knowledge/knowledge_audit_demo.py",
    "canonical_flow/knowledge/knowledge_audit_system.py",
    "canonical_flow/knowledge/preflight_validator.py",
    "canonical_flow/mathematical_enhancers/__init__.py",
    "canonical_flow/mathematical_enhancers/aggregation_enhancer.py",
    "canonical_flow/mathematical_enhancers/analysis_enhancer.py",
    "canonical_flow/mathematical_enhancers/context_enhancer.py",
    "canonical_flow/mathematical_enhancers/hyperbolic_tensor_networks.py",
    "canonical_flow/mathematical_enhancers/ingestion_enhancer.py",
    "canonical_flow/mathematical_enhancers/integration_enhancer.py",
    "canonical_flow/mathematical_enhancers/knowledge_enhancer.py",
    "canonical_flow/mathematical_enhancers/mathematical_compatibility_matrix.py",
    "canonical_flow/mathematical_enhancers/mathematical_pipeline_coordinator.py",
    "canonical_flow/mathematical_enhancers/orchestration_enhancer.py",
    "canonical_flow/mathematical_enhancers/pre_flight_validator.py",
    "canonical_flow/mathematical_enhancers/retrieval_enhancer.py",
    "canonical_flow/mathematical_enhancers/scoring_enhancer.py",
    "canonical_flow/pipeline_state_manager.py"
  ],
  "generated_at": "2025-09-03T11:13:21.368475"
}